[[plugins]]
repo = 'lambdalisue/gina.vim'
lazy = true
on_cmd = 'Gina'
hook_add = '''
  nmap <space>ah <Cmd>Gina log --graph --all --max-count=100<CR>
  nmap <expr> <space>aH $'<Cmd>Gina log --graph --max-count=100 {nvim_buf_get_name(nvim_get_current_buf())}<CR>'
'''

[[plugins]]
repo = 'lambdalisue/gin.vim'
lazy = true
depends = 'denops.vim'
hook_add = '''
  nmap <space>aa <Cmd>GinStatus<CR>
  nmap <space>ac <Cmd>Gin commit -v<CR>
  nmap <space>aC <Cmd>Gin commit -v --amend<CR>
  nmap <space>ab <Cmd>GinBranch<CR>
'''
[plugins.ftplugin]
gin-branch = '''
  nmap <buffer> N <Plug>(gin-action-new)
'''
gin-diff = '''
  setl nobuflisted
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
lazy = true
on_event = ['BufReadPost', 'BufNewFile']
hook_add = '''
  set signcolumn=yes
'''
lua_source = '''
  local gitsigns = require 'gitsigns'
  gitsigns.setup {
    signs = {
      add = { text = '+' },
      change = { text = '|' },
      delete = { text = '_' },
      topdelete = { text = 'â€¾' },
      changedelete = { text = '~' },
    },
    signcolumn = true, -- Toggle with `:Gitsigns toggle_signs`
    numhl = false, -- Toggle with `:Gitsigns toggle_numhl`
    linehl = false, -- Toggle with `:Gitsigns toggle_linehl`
    word_diff = false, -- Toggle with `:Gitsigns toggle_word_diff`
    watch_gitdir = {
      interval = 1000,
      follow_files = true,
    },
    attach_to_untracked = true,
    current_line_blame = false, -- Toggle with `:Gitsigns toggle_current_line_blame`
    current_line_blame_opts = {
      virt_text = true,
      virt_text_pos = 'eol', -- 'eol' | 'overlay' | 'right_align'
      delay = 1000,
      ignore_whitespace = false,
    },
    current_line_blame_formatter = '<author>, <author_time:%Y-%m-%d> - <summary>',
    sign_priority = 6,
    update_debounce = 100,
    status_formatter = nil, -- Use default
    max_file_length = 40000,
    preview_config = {
      -- Options passed to nvim_open_win
      border = 'single',
      style = 'minimal',
      relative = 'cursor',
      row = 0,
      col = 1,
    },
    yadm = {
      enable = false,
    },
    on_attach = function(bufnr)
      vim.keymap.set_table {
        mode = 'n',
        opts = {
          buffer = bufnr,
          silent = true,
        },
        maps = {
          -- Navigation
          {
            ']c',
            function()
              if vim.wo.diff then
                vim.cmd.normal { args = { ']c' }, bang = true }
                return
              end

              require('gitsigns').next_hunk {
                navigation_message = false,
              }
            end,
          },
          {
            '[c',
            function()
              if vim.wo.diff then
                vim.cmd.normal { args = { '[c' }, bang = true }
                return
              end

              require('gitsigns').prev_hunk {
                navigation_message = false,
              }
            end,
          },
          -- Actions
          { '<Space>hs', '<cmd>Gitsigns stage_hunk<CR>' },
          { '<Space>hS', '<cmd>Gitsigns undo_stage_hunk<CR>' },
          { '<Space>hu', '<cmd>Gitsigns reset_hunk<CR>' },
          { '<Space>hp', '<cmd>Gitsigns preview_hunk<CR>' },
          { '<Space>hb', '<cmd>lua require"gitsigns".blame_line{full=true}<CR>' },
          { '<Space>tb', '<cmd>Gitsigns toggle_current_line_blame<CR>' },
          { '<Space>hd', '<cmd>Gitsigns diffthis<CR>' },
          { '<Space>hD', '<cmd>lua require"gitsigns".diffthis("~")<CR>' },
          { '<Space>td', '<cmd>Gitsigns toggle_deleted<CR>' },
        },
      }

      -- Text object
      vim.keymap.set({ 'x', 'o' }, 'ih', ':<C-U>Gitsigns select_hunk<CR>')
    end,
  }
'''
