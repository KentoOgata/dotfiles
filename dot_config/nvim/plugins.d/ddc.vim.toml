# skkeletonの補完メニューを提供してもらってる
[[plugins]]
repo = 'Shougo/ddc.vim'
depends = 'denops.vim'
lua_add = '''
  vim.api.nvim_create_autocmd('User', {
    group = 'VimRc',
    once = true,
    pattern = 'DenopsPluginPost:skkeleton',
    desc = 'skkeletonが読み込まれたときにddcを有効化する',
    callback = function()
      vim.fn['ddc#custom#patch_global'] {
        ui = 'pum',
        sources = {
          'skkeleton',
        },
        sourceOptions = {
          skkeleton = {
            mark = 'skk',
            matchers = { 'skkeleton' },
            sorters = {},
            isVolatile = true,
          },
        },
      }
      vim.fn['ddc#enable']()
    end
  })
'''

# ddc.vimの補完メニューとしてpum.vimを使うためのやつ
[[plugins]]
repo = 'Shougo/ddc-ui-pum'
depends = 'pum.vim'

# Shougo先生による補完メニューの実装
[[plugins]]
repo = 'Shougo/pum.vim'
# キーマップはnvim-cmpで解決するのでここでは設定しない
hook_add = '''
  " pum.vimで選択したときに挿入しないようにする
  set completeopt+=noinsert
  " なんかのプラグインがpum.vimを呼び出したときに実行する
  " Vimの初期化より先に実行したい処理ではないため
  autocmd VimRc SourcePost pum.vim ++once call pum#set_option('border', 'rounded')
'''
