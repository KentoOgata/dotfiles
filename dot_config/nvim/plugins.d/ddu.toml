[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
  nnoremap <Plug>(ff-buffers)             <Plug>(ddu-buffers)
  nnoremap <Plug>(ff-files)               <Plug>(ddu-files)
  nnoremap <Plug>(ff-resume)              <Plug>(ddu-resume)
  nnoremap <Plug>(ff-config_files)        <Plug>(ddu-config_files)
  nnoremap <Plug>(ff-help_tags)           <Plug>(ddu-help_tags)
  nnoremap <Plug>(ff-grep)                <Plug>(ddu-rg)
  nnoremap <Plug>(ff-lines)               <Plug>(ddu-lines)
  nnoremap <Plug>(ff-lsp_implementations) <Plug>(ddu-lsp_implementations)
  nnoremap <Plug>(ff-lsp_references)      <Plug>(ddu-lsp_references)
  nnoremap <Plug>(ff-mrw)                 <Plug>(ddu-mrw)

  AlterCmd fp DduPlugins
  AlterCmd fq DduGhq

  " denopsが立ち上がったときにdduをセットアップする
  autocmd VimRc User DenopsReady ++once call timer_start(10, { -> luaeval("require('rc.ddu').setup()") })
'''

[[plugins]]
repo = 'shun/ddu-source-buffer'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'

[[plugins]]
repo = 'uga-rosa/ddu-source-lsp'

[[plugins]]
repo = 'uga-rosa/ddu-filter-converter_devicon'

[[plugins]]
repo = 'matsui54/ddu-source-help'

[[plugins]]
repo = 'shun/ddu-source-rg'
build = 'rm ./plugin/ddu_rg.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'
lazy = true
lua_add = '''
  vim.ui.select = function(...)
    vim.fn['dein#source'] 'ddu-vim-ui-select'
    vim.ui.select(...)
  end
'''

[[plugins]]
repo = 'kuuote/ddu-source-mr'

[[plugins]]
repo = '4513ECHO/ddu-source-ghq'

[[plugins]]
repo = 'Shougo/ddu-source-action'

[[plugins]]
repo = 'kyoh86/ddu-filter-converter_hl_dir'
