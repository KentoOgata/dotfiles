#!/usr/bin/env -S deno run --allow-env --allow-run --ext ts

const directory = `${Deno.env.get("HOME")}/repos/github.com/vim/vim`;

function vimInstall(logWriter: Deno.Writer): void {
  const gitClone = new Deno.Command("git", {
    args: [
      "clone",
      "https://github.com/vim/vim.git",
      directory,
    ],
  });
  logWriter.write(gitClone.outputSync().stdout);

  const make = new Deno.Command("make", {
    cwd: directory,
  });
  logWriter.write(make.outputSync().stdout);

  const install = new Deno.Command("make", {
    args: [
      "install",
      `prefix=${Deno.env.get("HOME")}/.local`,
    ],
    cwd: directory,
  });
  logWriter.write(install.outputSync().stdout);
}

function vimUpgrade(logWriter: Deno.Writer): void {
  const gitPull = new Deno.Command("git", {
    args: [
      "pull",
      "-p",
    ],
    cwd: directory,
  });
  logWriter.write(gitPull.outputSync().stdout);

  const make = new Deno.Command("make", {
    cwd: directory,
  });
  logWriter.write(make.outputSync().stdout);

  const install = new Deno.Command("make", {
    args: [
      "install",
    ],
    cwd: directory,
  });
  logWriter.write(install.outputSync().stdout);
}

function showHelp(): void {
  console.log(
    "\ninstall - Install Vim to ${HOME}/.local/bin\nupgrade - Upgrade your Vim.\n",
  );
}

const method = Deno.args[0];
if (method == "install") {
  vimInstall(Deno.stdout);
} else if (method == "upgrade") {
  vimUpgrade(Deno.stdout);
} else if (method == "help") {
  showHelp();
} else {
  showHelp();
  Deno.exit(1);
}
Deno.exit(0);

// vim:filetype=typescript
